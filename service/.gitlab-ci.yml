stages:
  - build
  - artifacts
  - deploy

build_image:
  stage: build
  before_script: 
    - echo "Configurate ssh connection to 135.181.204.59"
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$VM1_PRIVATE_KEY")
  script:
    - echo "Send project to 135.181.204.59"
    - ssh root@135.181.204.59 "mkdir -p qa_system"
    - scp -r /builds/hardml/qa-system/* root@135.181.204.59:~/qa_system/
    - echo "Build gateway image on 135.181.204.59"
    - ssh root@135.181.204.59 "docker build -t localhost:5000/gateway ~/qa_system/gateway/"
    - echo "Build indexer image on 135.181.204.59"
    - ssh root@135.181.204.59 "docker build -t localhost:5000/indexer ~/qa_system/indexer/"
    - echo "Send images to local registry"
    - ssh root@135.181.204.59 "docker push localhost:5000/gateway"
    - ssh root@135.181.204.59 "docker push localhost:5000/indexer"
  after_script:
    - echo "Pull application images to swarm worker from registry"
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$VM2_PRIVATE_KEY")
    - ssh root@65.108.144.165 "docker pull 135.181.204.59:5000/gateway"
    - ssh root@65.108.144.165 "docker pull 135.181.204.59:5000/indexer"
    - echo "Send artifacts to worker"
    - ssh root@65.108.144.165 "mkdir -p qa_system/share"
    - scp -r /builds/hardml/qa-system/share/* root@65.108.144.165:~/qa_system/share/

download_model:
  stage: artifacts
  before_script:
    - echo "Configurate ssh connection to 135.181.204.59"
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$VM1_PRIVATE_KEY")
  script:
    - echo "Downloading model to 135.181.204.59"
    - ssh root@135.181.204.59 "wget https://tfhub.dev/google/universal-sentence-encoder-multilingual/3?tf-hub-format=compressed -O use_model.tar.gz"
    - ssh root@135.181.204.59 "mkdir -p qa_system/share/use_model/1 && tar -xf use_model.tar.gz -C qa_system/share/use_model/1"
  after_script:
    - echo "Configurate ssh connection to 65.108.144.165"
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$VM2_PRIVATE_KEY")
    - echo "Downloading model to 65.108.144.165"
    - ssh root@65.108.144.165 "wget https://tfhub.dev/google/universal-sentence-encoder-multilingual/3?tf-hub-format=compressed -O use_model.tar.gz"
    - ssh root@65.108.144.165 "mkdir -p qa_system/share/use_model/1 && tar -xf use_model.tar.gz -C qa_system/share/use_model/1"

deploy-job:
  stage: deploy
  before_script: 
    - echo "Configurate ssh connection to 135.181.204.59"
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$VM1_PRIVATE_KEY")
  script:
    - echo "Deploying application on swarm master node"
    - ssh root@135.181.204.59 "docker stack deploy --compose-file qa_system/docker-compose.yml qa_system"
